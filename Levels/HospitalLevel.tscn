[gd_scene load_steps=10 format=3 uid="uid://h8f6xyr320jw"]

[ext_resource type="Script" path="res://Classes/test_level.gd" id="1_lb5ks"]
[ext_resource type="Script" path="res://Classes/Floor.gd" id="2_8jama"]
[ext_resource type="PackedScene" uid="uid://dvwx4paulp02r" path="res://Entities/Player.tscn" id="5_11qjr"]

[sub_resource type="BoxMesh" id="BoxMesh_wd2uy"]
size = Vector3(11, 0.1, 11)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_ci7e5"]
transparency = 1
shading_mode = 0
albedo_color = Color(1, 1, 1, 0.196078)

[sub_resource type="SphereMesh" id="SphereMesh_i7wk1"]
material = SubResource("StandardMaterial3D_ci7e5")
radial_segments = 16
rings = 8

[sub_resource type="Shader" id="Shader_3sqrf"]
code = "shader_type spatial;
render_mode unshaded;

uniform sampler2D SCREEN_TEXTURE: hint_screen_texture, filter_linear_mipmap;
uniform sampler2D DEPTH_TEXTURE : source_color, hint_depth_texture;

uniform float depth_range:hint_range(0.1, 100.0, 0.1);

void vertex(){
	POSITION = vec4(VERTEX, 1.0);
}

void fragment() {
	vec2 uv = SCREEN_UV;
	
	vec3 screen_color = texture(SCREEN_TEXTURE, uv).rgb;
	
	float depth = texture(DEPTH_TEXTURE, SCREEN_UV).x;
	vec3 ndc = vec3(SCREEN_UV * 2.0 - 1.0, depth);
	vec4 view = INV_PROJECTION_MATRIX * vec4(ndc, 1.0);
	view.xyz /= view.w;
	float linear_depth = -view.z / depth_range;
	
	// your code goes here!
	
	vec3 fog = vec3(linear_depth) * vec3(0.,10.0/255.0,250.0/255.0);
	vec3 final_color = fog + screen_color;
	
	ALBEDO = final_color;
	ALPHA = screen_color.b;
	
	// example outputs
	
	//ALBEDO = vec3(linear_depth); 	// showing depth texture
	//ALBEDO = normal; 				// showing normal texture
	//ALBEDO = vec3(roughness); 	// showing roughness texture
	ALBEDO = final_color;		// showing screen texture
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_34wh1"]
render_priority = 0
shader = SubResource("Shader_3sqrf")
shader_parameter/depth_range = 25.0

[sub_resource type="QuadMesh" id="QuadMesh_8uww4"]
material = SubResource("ShaderMaterial_34wh1")
flip_faces = true
size = Vector2(2, 2)

[node name="LevelHome" type="Node3D"]
script = ExtResource("1_lb5ks")

[node name="Collidable" type="Node3D" parent="."]

[node name="Floor" type="MeshInstance3D" parent="Collidable"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.05, 0)
mesh = SubResource("BoxMesh_wd2uy")
script = ExtResource("2_8jama")
step_sound = "Placeholder"

[node name="CPUParticles3D" type="CPUParticles3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
amount = 360
lifetime = 5.0
preprocess = 3.0
randomness = 0.2
mesh = SubResource("SphereMesh_i7wk1")
emission_shape = 3
emission_box_extents = Vector3(11, 1, 11)
direction = Vector3(0, 1, 0)
spread = 0.0
gravity = Vector3(0, 0, 0)
initial_velocity_min = 0.05
initial_velocity_max = 0.3
linear_accel_min = -0.1
linear_accel_max = 0.1
damping_max = 0.005
scale_amount_min = 0.02
scale_amount_max = 0.03

[node name="CPUParticles3D2" type="CPUParticles3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 4, 0)
amount = 360
lifetime = 5.0
preprocess = 3.0
randomness = 0.2
mesh = SubResource("SphereMesh_i7wk1")
emission_shape = 3
emission_box_extents = Vector3(11, 1, 11)
direction = Vector3(0, 1, 0)
spread = 0.0
gravity = Vector3(0, 0, 0)
initial_velocity_min = 0.05
initial_velocity_max = 0.3
linear_accel_min = -0.1
linear_accel_max = 0.1
damping_max = 0.005
scale_amount_min = 0.02
scale_amount_max = 0.03

[node name="Player" parent="." instance=ExtResource("5_11qjr")]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, -3.81531, 1.14345, -4.5)

[node name="FogShader" parent="Player/Neck" index="0"]
mesh = SubResource("QuadMesh_8uww4")

[editable path="Player"]
[editable path="Player/QuitWindow"]
